apply plugin: 'maven'

Properties user_properties = new Properties()
user_properties.load(project.rootProject.file('maven_user.properties').newDataInputStream())
def repoUrl = user_properties.getProperty("repository.url")
def userName = user_properties.getProperty("repository.user")
def userPassword = user_properties.getProperty("repository.password")

Properties pom_properties = new Properties()
pom_properties.load(project.file('maven_pom.properties').newDataInputStream())
def pom_name = pom_properties.getProperty("POM_NAME")
def pom_description = pom_properties.getProperty("POM_DESCRIPTION")
def pom_group = pom_properties.getProperty("POM_GROUP")
def pom_artifact_id = pom_properties.getProperty("POM_ARTIFACT_ID")
def pom_packaging = pom_properties.getProperty("POM_PACKAGING")
def pom_version = pom_properties.getProperty("POM_VERSION")


uploadArchives {

    repositories.mavenDeployer {
//        repository(url: repoUrl) {
//            authentication(userName: userName,
//                    password: userPassword)
//        }

        // 发布到本地
        repository(url: uri('../repo'))

        pom.project {
            name pom_name
            description pom_description
            groupId pom_group
            artifactId pom_artifact_id
            version pom_version
            packaging pom_packaging
        }
    }
}

task cleanDir(type:Delete) {
    delete buildDir
}

//task androidJavadocs(type: Javadoc) {
//    // 设置源码所在的位置
//    source = android.sourceSets.main.java.sourceFiles
//}

// 生成javadoc.jar
//task androidJavadocsJar(type: Jar) {
//    // 指定文档名称
//    classifier = 'javadoc'
//    from androidJavadocs.destinationDir
//}

// 生成sources.jar
//task androidSourcesJar(type: Jar) {
//    classifier = 'sources'
//    from android.sourceSets.main.java.sourceFiles
//}

//def isSnapshotBuild(String version) {
//    return version.contains("SNAPSHOT");
//}

//artifacts {
//    if (isSnapshotBuild(pom_version)) {
//        archives androidSourcesJar
//        archives androidJavadocsJar
//    }
//}

uploadArchives.mustRunAfter 'cleanDir'